// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WDRepApp.Server.Data;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(WDRepDbContext))]
    [Migration("20250905184349_Baseline")]
    partial class Baseline
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WDRepApp.Entities.DefaultItem", b =>
                {
                    b.Property<int>("DefaultItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("defaultitemid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DefaultItemId"));

                    b.Property<string>("CancelLink")
                        .HasColumnType("text")
                        .HasColumnName("cancellink");

                    b.Property<string>("CancelLinkText")
                        .HasColumnType("text")
                        .HasColumnName("cancellinktext");

                    b.Property<string>("DefaultItemPage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("defaultitempage");

                    b.Property<string>("DefaultItemTab")
                        .HasColumnType("text")
                        .HasColumnName("defaultitemtab");

                    b.Property<string>("NextLink")
                        .HasColumnType("text")
                        .HasColumnName("nextlink");

                    b.Property<string>("NextLinkText")
                        .HasColumnType("text")
                        .HasColumnName("nextlinktext");

                    b.Property<string>("PreviousLink")
                        .HasColumnType("text")
                        .HasColumnName("previouslink");

                    b.Property<string>("PreviousLinkText")
                        .HasColumnType("text")
                        .HasColumnName("previouslinktext");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.HasKey("DefaultItemId");

                    b.ToTable("defaultitems", (string)null);
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.Alias", b =>
                {
                    b.Property<int>("AliasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("aliasid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AliasId"));

                    b.Property<string>("AliasValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("alias");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddate");

                    b.Property<string>("CreatedIp")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("createdip");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleteddate");

                    b.Property<string>("DeletedIp")
                        .HasColumnType("text")
                        .HasColumnName("deletedip");

                    b.Property<string>("HumanReadableId")
                        .HasColumnType("text")
                        .HasColumnName("humanreadableid");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddate");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("text")
                        .HasColumnName("modifiedip");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.HasKey("AliasId");

                    b.ToTable("aliases");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.ContactType", b =>
                {
                    b.Property<int>("ContactTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("contacttypeid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContactTypeId"));

                    b.Property<bool>("AppliesToEmail")
                        .HasColumnType("boolean")
                        .HasColumnName("appliestoemail");

                    b.Property<bool>("AppliesToPhone")
                        .HasColumnType("boolean")
                        .HasColumnName("appliestophone");

                    b.Property<bool>("AppliesToPostalAddress")
                        .HasColumnType("boolean")
                        .HasColumnName("appliestopostaladdress");

                    b.Property<string>("ContactTypeName")
                        .HasColumnType("text")
                        .HasColumnName("contacttypename");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.HasKey("ContactTypeId");

                    b.ToTable("contacttypes");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.CoreIdentity", b =>
                {
                    b.Property<int>("CoreIdentityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("coreidentityid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CoreIdentityId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<string>("CreatedIp")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("createdip");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dob");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("firstname");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text")
                        .HasColumnName("middlename");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("text")
                        .HasColumnName("modifiedip");

                    b.Property<int?>("PlaceOfBirthId")
                        .HasColumnType("integer")
                        .HasColumnName("placeofbirthid");

                    b.Property<string>("PreferredName")
                        .HasColumnType("text")
                        .HasColumnName("preferredname");

                    b.Property<int?>("PrefixId")
                        .HasColumnType("integer")
                        .HasColumnName("prefixid");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.Property<int?>("SexId")
                        .HasColumnType("integer")
                        .HasColumnName("sexid");

                    b.Property<byte[]>("Ssn")
                        .HasColumnType("bytea")
                        .HasColumnName("ssn");

                    b.Property<int?>("SuffixId")
                        .HasColumnType("integer")
                        .HasColumnName("suffixid");

                    b.HasKey("CoreIdentityId");

                    b.ToTable("coreidentity");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.CoreIdentityAlias", b =>
                {
                    b.Property<int>("CoreIdentityAliasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("coreidentityaliasid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CoreIdentityAliasId"));

                    b.Property<int>("AliasId")
                        .HasColumnType("integer")
                        .HasColumnName("aliasid");

                    b.Property<int>("CoreIdentityId")
                        .HasColumnType("integer")
                        .HasColumnName("coreidentityid");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddate");

                    b.Property<string>("CreatedIp")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("createdip");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleteddate");

                    b.Property<string>("DeletedIp")
                        .HasColumnType("text")
                        .HasColumnName("deletedip");

                    b.Property<string>("HumanReadableId")
                        .HasColumnType("text")
                        .HasColumnName("humanreadableid");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddate");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("text")
                        .HasColumnName("modifiedip");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.HasKey("CoreIdentityAliasId");

                    b.ToTable("coreidentityaliases");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.CoreIdentityEmail", b =>
                {
                    b.Property<int>("CoreIdentityEmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("coreidentityemailid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CoreIdentityEmailId"));

                    b.Property<int>("ContactSequence")
                        .HasColumnType("integer")
                        .HasColumnName("contactsequence");

                    b.Property<int>("ContactTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("contacttypeid");

                    b.Property<int>("CoreIdentityId")
                        .HasColumnType("integer")
                        .HasColumnName("coreidentityid");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleteddate");

                    b.Property<string>("DeletedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("deletedip");

                    b.Property<int>("EmailId")
                        .HasColumnType("integer")
                        .HasColumnName("emailid");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddate");

                    b.Property<string>("ModifiedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("modifiedip");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.Property<string>("createdip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("createdip");

                    b.HasKey("CoreIdentityEmailId");

                    b.ToTable("coreidentityemails");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.CoreIdentityPhone", b =>
                {
                    b.Property<int>("CoreIdentityPhoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("coreidentityphoneid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CoreIdentityPhoneId"));

                    b.Property<int>("ContactSequence")
                        .HasColumnType("integer")
                        .HasColumnName("contactsequence");

                    b.Property<int>("ContactTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("contacttypeid");

                    b.Property<int>("CoreIdentityId")
                        .HasColumnType("integer")
                        .HasColumnName("coreidentityid");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleteddate");

                    b.Property<string>("DeletedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("deletedip");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddate");

                    b.Property<string>("ModifiedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("modifiedip");

                    b.Property<int>("PhoneId")
                        .HasColumnType("integer")
                        .HasColumnName("phoneid");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.Property<string>("createdip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("createdip");

                    b.HasKey("CoreIdentityPhoneId");

                    b.ToTable("coreidentityphones");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.CoreIdentityPostalAddress", b =>
                {
                    b.Property<int>("CoreIdentityPostalAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("coreidentitypostaladdressid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CoreIdentityPostalAddressId"));

                    b.Property<int>("ContactSequence")
                        .HasColumnType("integer")
                        .HasColumnName("contactsequence");

                    b.Property<int>("ContactTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("contacttypeid");

                    b.Property<int>("CoreIdentityId")
                        .HasColumnType("integer")
                        .HasColumnName("coreidentityid");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleteddate");

                    b.Property<string>("DeletedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("deletedip");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddate");

                    b.Property<string>("ModifiedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("modifiedip");

                    b.Property<int>("PostalAddressId")
                        .HasColumnType("integer")
                        .HasColumnName("postaladdressid");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.Property<string>("createdip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("createdip");

                    b.HasKey("CoreIdentityPostalAddressId");

                    b.ToTable("coreidentitypostaladdresses");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.Email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("emailid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmailId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleteddate");

                    b.Property<string>("DeletedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("deletedip");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text")
                        .HasColumnName("emailaddress");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddate");

                    b.Property<string>("ModifiedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("modifiedip");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.Property<string>("createdip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("createdip");

                    b.HasKey("EmailId");

                    b.ToTable("emails");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.Geography", b =>
                {
                    b.Property<int>("GeographyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("geographyid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GeographyId"));

                    b.Property<string>("GeographyName")
                        .HasColumnType("text")
                        .HasColumnName("geographyname");

                    b.Property<int>("GeographyTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("geographytypeid");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parentid");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.HasKey("GeographyId");

                    b.ToTable("geography");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.GeographyType", b =>
                {
                    b.Property<int>("GeographyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("geographytypeid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GeographyTypeId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.HasKey("GeographyTypeId");

                    b.ToTable("geographytypes");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.MenuItem", b =>
                {
                    b.Property<int>("menuitemid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("menuitemid"));

                    b.Property<string>("cancellink")
                        .HasColumnType("text");

                    b.Property<string>("cancellinktext")
                        .HasColumnType("text");

                    b.Property<string>("immediatelink")
                        .HasColumnType("text");

                    b.Property<string>("menuitemname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("menuitemtypeid")
                        .HasColumnType("integer");

                    b.Property<string>("nextlink")
                        .HasColumnType("text");

                    b.Property<string>("nextlinktext")
                        .HasColumnType("text");

                    b.Property<int?>("parentid")
                        .HasColumnType("integer");

                    b.Property<string>("previouslink")
                        .HasColumnType("text");

                    b.Property<string>("previouslinktext")
                        .HasColumnType("text");

                    b.Property<int>("recordstatusid")
                        .HasColumnType("integer");

                    b.Property<int>("sequenceid")
                        .HasColumnType("integer");

                    b.HasKey("menuitemid");

                    b.ToTable("menuitems");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.MenuItemType", b =>
                {
                    b.Property<int>("menuitemtypeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("menuitemtypeid"));

                    b.Property<string>("menuitemtypename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("recordstatusid")
                        .HasColumnType("integer");

                    b.HasKey("menuitemtypeid");

                    b.ToTable("menuitemtypes");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.Phone", b =>
                {
                    b.Property<int>("PhoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("phoneid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PhoneId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleteddate");

                    b.Property<string>("DeletedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("deletedip");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddate");

                    b.Property<string>("ModifiedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("modifiedip");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phonenumber");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.Property<string>("createdip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("createdip");

                    b.HasKey("PhoneId");

                    b.ToTable("phones");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.PostalAddress", b =>
                {
                    b.Property<int>("PostalAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("postaladdressid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PostalAddressId"));

                    b.Property<string>("Address1")
                        .HasColumnType("text")
                        .HasColumnName("address1");

                    b.Property<string>("Address2")
                        .HasColumnType("text")
                        .HasColumnName("address2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddate");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleteddate");

                    b.Property<string>("DeletedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("deletedip");

                    b.Property<int>("GeographyId")
                        .HasColumnType("integer")
                        .HasColumnName("geographyid");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddate");

                    b.Property<string>("ModifiedIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("modifiedip");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text")
                        .HasColumnName("zipcode");

                    b.Property<string>("createdip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("createdip");

                    b.HasKey("PostalAddressId");

                    b.ToTable("postaladdresses");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.PrefixSuffix", b =>
                {
                    b.Property<int>("PrefixSuffixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prefixsuffixid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PrefixSuffixId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.HasKey("PrefixSuffixId");

                    b.ToTable("prefixsuffix");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.Sex", b =>
                {
                    b.Property<int>("SexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sexid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SexId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("recordstatusid");

                    b.HasKey("SexId");

                    b.ToTable("sexes");
                });

            modelBuilder.Entity("WDRepApp.Server.Entities.SsnToken", b =>
                {
                    b.Property<Guid>("Token")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("token");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<byte[]>("EncryptedSsn")
                        .HasColumnType("bytea")
                        .HasColumnName("encrypted_ssn");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires_at");

                    b.HasKey("Token");

                    b.ToTable("ssn_tokens", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
